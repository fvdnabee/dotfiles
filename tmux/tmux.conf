# set tmux to display things in 256 colors:
# 1)
set -g default-terminal "xterm-256color"
# 2) in shell rc:
#   a) alias tmux='TERM=xterm-256color tmux'
#   OR
#   b) alias tmux='tmux -2'

# increase maximum number of lines held in window history:
set -g history-limit 20000

# unbind default prefix and set it to Ctrl+a:
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# tile all windows:
# tiled:`Panes are spread out as evenly as possible over the window in
#        both rows and columns.'
unbind =
bind = select-layout tiled

# make window/pane index start with 1.
# This is easier for switching windows on qwerty layouts
set -g base-index 1
setw -g pane-base-index 1

# set window title:
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"

######################
#### Key Bindings ####
######################

# synchronize all panes in a window
bind y setw synchronize-panes

# override default bindings to respect working directory:
# see https://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# window movement:
bind n previous-window
bind m next-window

# pane movement shortcuts:
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 'horizontal scrolling' between tmux windows:
# also works with n, m in the default tmux key bindings
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Make Home/End keys work:
bind -n End send-key C-e
bind -n Home send-key C-a

# Scrolling with Shift + PgUp/PgDn in tmux:
# Make first key stroke of Shift+Pg/PgDn enter copy mode:
bind-key -T root -n S-PPage copy-mode -u
bind-key -T root -n S-NPage copy-mode -u

# In copy mode scroll with shift + PgUp/PgDn:
bind-key -T copy-mode-vi -n S-PPage send-keys -X page-up
bind-key -T copy-mode-vi -n S-NPage send-keys -X page-down

# swap windows
# see https://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1

# Renumber remaining windows when a window closed, see
# https://stackoverflow.com/questions/8469612/how-do-i-make-tmux-reorder-windows-when-one-is-deleted
set-option -g renumber-windows on

# set last-window similar to screen:
bind-key C-a last-window

# enable mouse support for switching panes/windows
set -g mouse on

# Use vi-style key bindings in the status line, for example at the command prompt:
set -g status-keys vi

# Use h,j,k,l for navigating in copy mode:
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/
# for a thorough overview of vi copy mode in tmux

# set vi mode for copy mode
set-window-option -g mode-keys vi

# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# use v and y like in vim for selecting and copying text
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Copy to system clipboard:
# see https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

##############################
### Color & Style Settings ###
##############################
source ~/GIT/dotfiles/tmux/theme.sh

##############################
########## Plugins ##########
##############################

# run-shell ~/GIT/tmux-resurrect/resurrect.tmux
# for vim
# set -g @resurrect-strategy-vim 'session'
